{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\thanatcha\\\\Documents\\\\Frontend_ReadAlright\\\\Screens\\\\InterestScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Button } from \"react-native-elements\";\nimport { Grid, Col, Row } from \"react-native-easy-grid\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport ReadingApi from \"../API/ReadingAPI\";\n\nvar ImageCards = function ImageCards() {\n  return React.createElement(Image, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    }\n  });\n};\n\nvar Interest = function Interest() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var read = function read() {\n    var data;\n    return _regeneratorRuntime.async(function read$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ReadingApi());\n\n          case 2:\n            data = _context.sent;\n            setResult(data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(result);\n  useEffect(function () {\n    read();\n  }, []);\n\n  if (result) {\n    console.log(\"Eiei\");\n    console.log(result);\n    console.log(\"Mookkkkkkkkk\");\n    console.log(result.length);\n    var items = [{\n      name: \"Music\",\n      img: require(\"./../assets/catagory/music.png\")\n    }, {\n      name: \"Movie\",\n      img: require(\"./../assets/catagory/movie.png\")\n    }, {\n      name: \"News\",\n      img: require(\"./../assets/catagory/news.png\")\n    }, {\n      name: \"Animal\",\n      img: require(\"./../assets/catagory/animal.png\")\n    }, {\n      name: \"Food\",\n      img: require(\"./../assets/catagory/food.png\")\n    }, {\n      name: \"Story\",\n      img: require(\"./../assets/catagory/story.png\")\n    }, {\n      name: \"House\",\n      img: require(\"./../assets/catagory/house.png\")\n    }, {\n      name: \"Natural\",\n      img: require(\"./../assets/catagory/natural.png\")\n    }, {\n      name: \"Sport\",\n      img: require(\"./../assets/catagory/sport.png\")\n    }];\n    return React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      }\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      }\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      }\n    }, React.createElement(Text, {\n      style: styles.topic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      }\n    }, \"Interest\"), React.createElement(Text, {\n      style: styles.descript,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      }\n    }, \"Please select 3 that you interest\")))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      }\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        paddingTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      }\n    }, React.createElement(FlatList, {\n      data: result,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          }\n        }, item.categoryName);\n      },\n      keyExtractor: function keyExtractor(_ref2, index) {\n        var id = _ref2.id;\n        return id;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      }\n    }))), React.createElement(FlatGrid, {\n      itemDimension: 110,\n      items: items,\n      style: styles.gridView,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n            index = _ref3.index;\n        return React.createElement(Card, {\n          containerStyle: styles.itemContainer,\n          image: item.img,\n          imageStyle: {\n            height: \"65%\"\n          },\n          imageProps: {\n            resizeMode: \"cover\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          }\n        }, React.createElement(View, {\n          style: {\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        }, React.createElement(Text, {\n          style: styles.itemTopic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          }\n        }, item.name)));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      }\n    }), React.createElement(Row, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      }\n    }, React.createElement(Button, {\n      title: \"Next\",\n      buttonStyle: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      }\n    }))));\n  } else {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      }\n    }, \"Loading\");\n  }\n\n  ;\n};\n\nexport default Interest;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  gridView: {\n    marginTop: 20,\n    flex: 1\n  },\n  itemContainer: {\n    borderRadius: 5,\n    height: 110,\n    width: 110,\n    overflow: \"hidden\"\n  },\n  topic: {\n    fontSize: 20,\n    color: \"#000\",\n    marginTop: 50,\n    fontWeight: \"bold\"\n  },\n  descript: {\n    fontSize: 16,\n    color: \"#000\",\n    fontWeight: \"600\"\n  },\n  itemTopic: {\n    fontSize: 14,\n    color: \"#000\",\n    fontWeight: \"bold\"\n  },\n  button: {\n    width: 200,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/thanatcha/Documents/Frontend_ReadAlright/Screens/InterestScreen.js"],"names":["React","useState","useEffect","Card","Button","Grid","Col","Row","FlatGrid","ReadingApi","ImageCards","Interest","result","setResult","read","data","console","log","length","items","name","img","require","styles","container","topic","descript","flex","paddingTop","item","categoryName","index","id","gridView","itemContainer","height","resizeMode","alignItems","itemTopic","button","StyleSheet","create","justifyContent","marginTop","borderRadius","width","overflow","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  ImageBackground,\r\n  FlatList\r\n} from \"react-native\";\r\nimport { Card, Button } from \"react-native-elements\";\r\nimport { Grid, Col, Row } from \"react-native-easy-grid\";\r\nimport { FlatGrid } from \"react-native-super-grid\";\r\nimport ReadingApi from \"../API/ReadingAPI\"\r\n\r\n\r\n\r\n\r\nconst ImageCards = () => {\r\n  return <Image />;\r\n};\r\n\r\nconst Interest = () => {\r\n  const [result, setResult] = useState([]);\r\n  const read = async () => {\r\n    const data = await ReadingApi();\r\n    setResult(data);\r\n    // console.log(data);\r\n    // console.log(\"-----------------\")\r\n    // console.log(result)\r\n  };\r\n  console.log(result)\r\n  useEffect(() => {\r\n    read();\r\n  }, []);\r\n\r\n  // const [count, setcount] = useState(0);\r\n  if (result) {\r\n    console.log(\"Eiei\")\r\n    console.log(result)\r\n    console.log(\"Mookkkkkkkkk\")\r\n    console.log(result.length)\r\n\r\n    const items = [\r\n      {\r\n        name: \"Music\",\r\n        img: require(\"./../assets/catagory/music.png\")\r\n      },\r\n      { name: \"Movie\", img: require(\"./../assets/catagory/movie.png\") },\r\n      {\r\n        name: \"News\",\r\n        img: require(\"./../assets/catagory/news.png\")\r\n      },\r\n      { name: \"Animal\", img: require(\"./../assets/catagory/animal.png\") },\r\n      {\r\n        name: \"Food\",\r\n        img: require(\"./../assets/catagory/food.png\")\r\n      },\r\n      { name: \"Story\", img: require(\"./../assets/catagory/story.png\") },\r\n      {\r\n        name: \"House\",\r\n        img: require(\"./../assets/catagory/house.png\")\r\n      },\r\n      {\r\n        name: \"Natural\",\r\n        img: require(\"./../assets/catagory/natural.png\")\r\n      },\r\n      { name: \"Sport\", img: require(\"./../assets/catagory/sport.png\") }\r\n    ];\r\n    return (\r\n      <ScrollView>\r\n        <Grid>\r\n          <Row>\r\n            <View style={styles.container}>\r\n              <View style={styles.container}>\r\n                <Text style={styles.topic}>Interest</Text>\r\n                <Text style={styles.descript}>\r\n                  Please select 3 that you interest\r\n              </Text>\r\n              </View>\r\n            </View>\r\n          </Row>\r\n          <Row>\r\n            <View style={styles.container}></View>\r\n          </Row>\r\n          <Row>\r\n            <View style={{ flex: 1, paddingTop: 20 }}>\r\n              <FlatList\r\n                data={result}\r\n                renderItem={({ item }) => (\r\n                  <Text>{item.categoryName} \r\n                  \r\n                  </Text>\r\n                )\r\n                }\r\n                keyExtractor={({ id }, index) => id}\r\n              />\r\n            </View>\r\n          </Row>\r\n\r\n\r\n          <FlatGrid\r\n            itemDimension={110}\r\n            items={items}\r\n            style={styles.gridView}\r\n            renderItem={({ item, index }) => (\r\n              <Card\r\n                containerStyle={styles.itemContainer}\r\n                image={item.img}\r\n                imageStyle={{\r\n                  height: \"65%\"\r\n                  // borderColor: \"red\",\r\n                  // borderTopLeftRadius: 5,\r\n                  // borderTopRightRadius: 5,\r\n                }}\r\n                imageProps={{ resizeMode: \"cover\" }}\r\n              >\r\n                {/* <Image\r\n              source={item.img}\r\n              style={{ height: \"100%\" }}\r\n              resizeMode=\"cover\"\r\n            /> */}\r\n                <View style={{ alignItems: \"center\" }}>\r\n                  <Text style={styles.itemTopic}>{item.name}</Text>\r\n                </View>\r\n              </Card>\r\n            )}\r\n          />\r\n          <Row style={styles.container}>\r\n            <Button title=\"Next\" buttonStyle={styles.button} />\r\n          </Row>\r\n        </Grid>\r\n        {/* <View style={styles.container}>\r\n          <TouchableOpacity onPress={() => setcount(count + 1)}>\r\n            <Image source={require(\"./../assets/icon.png\")} />\r\n          </TouchableOpacity>\r\n          <Text>your clicks: {count}</Text>\r\n          <Text>click</Text>\r\n        </View> */}\r\n        {/* <FlatGrid\r\n          itemDimension={110}\r\n          items={items}\r\n          style={styles.gridView}\r\n          renderItem={({ item, index }) => (\r\n            <CardViewWithImage\r\n              width={110}\r\n              borderRadius={5}\r\n              source={item.img}\r\n              title={item.name}\r\n              imageWidth={\"100%\"}\r\n              imageHeight={100}\r\n              roundedImage={false}\r\n            />\r\n          )}\r\n        /> */}\r\n      </ScrollView>\r\n    )\r\n  }\r\n  else {\r\n    return <Text>Loading</Text>\r\n  };\r\n};\r\n\r\nexport default Interest;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  gridView: {\r\n    marginTop: 20,\r\n    flex: 1\r\n  },\r\n  itemContainer: {\r\n    borderRadius: 5,\r\n    height: 110,\r\n    width: 110,\r\n    overflow: \"hidden\"\r\n  },\r\n  topic: {\r\n    fontSize: 20,\r\n    color: \"#000\",\r\n    marginTop: 50,\r\n    fontWeight: \"bold\"\r\n  },\r\n  descript: {\r\n    fontSize: 16,\r\n    color: \"#000\",\r\n    fontWeight: \"600\"\r\n  },\r\n  itemTopic: {\r\n    fontSize: 14,\r\n    color: \"#000\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  button: {\r\n    width: 200,\r\n    marginTop: 20\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}