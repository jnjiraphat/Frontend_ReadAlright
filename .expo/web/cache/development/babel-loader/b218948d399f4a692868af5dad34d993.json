{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\thanatcha\\\\Documents\\\\Frontend_ReadAlright\\\\Screens\\\\InterestScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Card, Button } from \"react-native-elements\";\nimport { Grid, Col, Row } from \"react-native-easy-grid\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport ReadingApi from \"../API/ReadingAPI\";\nvar items = [{\n  name: \"Music\",\n  img: require(\"./../assets/catagory/music.png\")\n}, {\n  name: \"Movie\",\n  img: require(\"./../assets/catagory/movie.png\")\n}, {\n  name: \"News\",\n  img: require(\"./../assets/catagory/news.png\")\n}, {\n  name: \"Animal\",\n  img: require(\"./../assets/catagory/animal.png\")\n}, {\n  name: \"Food\",\n  img: require(\"./../assets/catagory/food.png\")\n}, {\n  name: \"Story\",\n  img: require(\"./../assets/catagory/story.png\")\n}, {\n  name: \"House\",\n  img: require(\"./../assets/catagory/house.png\")\n}, {\n  name: \"Natural\",\n  img: require(\"./../assets/catagory/natural.png\")\n}, {\n  name: \"Sport\",\n  img: require(\"./../assets/catagory/sport.png\")\n}];\n\nvar ImageCards = function ImageCards() {\n  return React.createElement(Image, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  });\n};\n\nvar Interest = function Interest() {\n  var _useState = useState({\n    hits: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var read = function read() {\n    var data;\n    return _regeneratorRuntime.async(function read$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ReadingApi());\n\n          case 2:\n            data = _context.sent;\n            setResult(data);\n            console.log(data);\n            console.log(\"-----------------\");\n            console.log(result);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    read();\n  }, []);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }, result.hits.map(function (item) {\n    return React.createElement(\"li\", {\n      key: item.category_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      }\n    });\n  }));\n};\n\nexport default Interest;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  gridView: {\n    marginTop: 20,\n    flex: 1\n  },\n  itemContainer: {\n    borderRadius: 5,\n    height: 110,\n    width: 110,\n    overflow: \"hidden\"\n  },\n  topic: {\n    fontSize: 20,\n    color: \"#000\",\n    marginTop: 50,\n    fontWeight: \"bold\"\n  },\n  descript: {\n    fontSize: 16,\n    color: \"#000\",\n    fontWeight: \"600\"\n  },\n  itemTopic: {\n    fontSize: 14,\n    color: \"#000\",\n    fontWeight: \"bold\"\n  },\n  button: {\n    width: 200,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/thanatcha/Documents/Frontend_ReadAlright/Screens/InterestScreen.js"],"names":["React","useState","useEffect","Card","Button","Grid","Col","Row","FlatGrid","ReadingApi","items","name","img","require","ImageCards","Interest","hits","result","setResult","read","data","console","log","map","item","category_id","styles","StyleSheet","create","container","flex","alignItems","justifyContent","gridView","marginTop","itemContainer","borderRadius","height","width","overflow","topic","fontSize","color","fontWeight","descript","itemTopic","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  ImageBackground\r\n} from \"react-native\";\r\nimport { Card, Button } from \"react-native-elements\";\r\nimport { Grid, Col, Row } from \"react-native-easy-grid\";\r\nimport { FlatGrid } from \"react-native-super-grid\";\r\nimport ReadingApi from \"../API/ReadingAPI\"\r\n\r\n\r\nconst items = [\r\n  {\r\n    name: \"Music\",\r\n    img: require(\"./../assets/catagory/music.png\")\r\n  },\r\n  { name: \"Movie\", img: require(\"./../assets/catagory/movie.png\") },\r\n  {\r\n    name: \"News\",\r\n    img: require(\"./../assets/catagory/news.png\")\r\n  },\r\n  { name: \"Animal\", img: require(\"./../assets/catagory/animal.png\") },\r\n  {\r\n    name: \"Food\",\r\n    img: require(\"./../assets/catagory/food.png\")\r\n  },\r\n  { name: \"Story\", img: require(\"./../assets/catagory/story.png\") },\r\n  {\r\n    name: \"House\",\r\n    img: require(\"./../assets/catagory/house.png\")\r\n  },\r\n  {\r\n    name: \"Natural\",\r\n    img: require(\"./../assets/catagory/natural.png\")\r\n  },\r\n  { name: \"Sport\", img: require(\"./../assets/catagory/sport.png\") }\r\n];\r\n\r\nconst ImageCards = () => {\r\n  return <Image />;\r\n};\r\n\r\nconst Interest = () => {\r\n  const [result, setResult] = useState({hits : []});\r\n  const read = async () => {\r\n    const data = await ReadingApi();\r\n    setResult(data);\r\n    console.log(data);\r\n    console.log(\"-----------------\");\r\n    // console.log(result)\r\n    // this.result = data;\r\n    console.log(result)\r\n  };\r\n\r\n  useEffect(() => {\r\n    read();\r\n  }, []);\r\n\r\n  // const [count, setcount] = useState(0);\r\n  // if (result) {\r\n    return (\r\n      <ul>\r\n        {result.hits.map(item => (\r\n          <li key = {item.category_id}>\r\n            \r\n          </li>\r\n        ))}\r\n      </ul>\r\n      // <ScrollView>\r\n      //   <Grid>\r\n      //     <Row>\r\n      //       <View style={styles.container}>\r\n      //         <View style={styles.container}>\r\n      //           <Text style={styles.topic}>Interest</Text>\r\n      //           <Text style={styles.descript}>\r\n      //             Please select 3 that you interest\r\n      //         </Text>\r\n      //         </View>\r\n      //       </View>\r\n      //     </Row>\r\n      //     <Row>\r\n      //       <Text>AA : {result.categoryName}</Text>\r\n      //     </Row>\r\n      //     <Row>\r\n      //       <View style={styles.container}></View>\r\n      //     </Row>\r\n\r\n      //     <FlatGrid\r\n      //       itemDimension={110}\r\n      //       items={items}\r\n      //       style={styles.gridView}\r\n      //       renderItem={({ item, index }) => (\r\n      //         <Card\r\n      //           containerStyle={styles.itemContainer}\r\n      //           image={item.img}\r\n      //           imageStyle={{\r\n      //             height: \"65%\"\r\n      //             // borderColor: \"red\",\r\n      //             // borderTopLeftRadius: 5,\r\n      //             // borderTopRightRadius: 5,\r\n      //           }}\r\n      //           imageProps={{ resizeMode: \"cover\" }}\r\n      //         >\r\n      //           {/* <Image\r\n      //         source={item.img}\r\n      //         style={{ height: \"100%\" }}\r\n      //         resizeMode=\"cover\"\r\n      //       /> */}\r\n      //           <View style={{ alignItems: \"center\" }}>\r\n      //             <Text style={styles.itemTopic}>{item.name}</Text>\r\n      //           </View>\r\n      //         </Card>\r\n      //       )}\r\n      //     />\r\n      //     <Row style={styles.container}>\r\n      //       <Button title=\"Next\" buttonStyle={styles.button} />\r\n      //     </Row>\r\n      //   </Grid>\r\n      //   {/* <View style={styles.container}>\r\n      //     <TouchableOpacity onPress={() => setcount(count + 1)}>\r\n      //       <Image source={require(\"./../assets/icon.png\")} />\r\n      //     </TouchableOpacity>\r\n      //     <Text>your clicks: {count}</Text>\r\n      //     <Text>click</Text>\r\n      //   </View> */}\r\n      //   {/* <FlatGrid\r\n      //     itemDimension={110}\r\n      //     items={items}\r\n      //     style={styles.gridView}\r\n      //     renderItem={({ item, index }) => (\r\n      //       <CardViewWithImage\r\n      //         width={110}\r\n      //         borderRadius={5}\r\n      //         source={item.img}\r\n      //         title={item.name}\r\n      //         imageWidth={\"100%\"}\r\n      //         imageHeight={100}\r\n      //         roundedImage={false}\r\n      //       />\r\n      //     )}\r\n      //   /> */}\r\n      // </ScrollView>\r\n    );\r\n  // } else {\r\n  //   return (\r\n  //     <View><Text>Loading</Text></View>\r\n  //   )\r\n  // }\r\n}\r\nexport default Interest;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  gridView: {\r\n    marginTop: 20,\r\n    flex: 1\r\n  },\r\n  itemContainer: {\r\n    borderRadius: 5,\r\n    height: 110,\r\n    width: 110,\r\n    overflow: \"hidden\"\r\n  },\r\n  topic: {\r\n    fontSize: 20,\r\n    color: \"#000\",\r\n    marginTop: 50,\r\n    fontWeight: \"bold\"\r\n  },\r\n  descript: {\r\n    fontSize: 16,\r\n    color: \"#000\",\r\n    fontWeight: \"600\"\r\n  },\r\n  itemTopic: {\r\n    fontSize: 14,\r\n    color: \"#000\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  button: {\r\n    width: 200,\r\n    marginTop: 20\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}