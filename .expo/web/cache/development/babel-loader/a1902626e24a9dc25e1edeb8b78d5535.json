{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/jenny/Frontend_ReadAlright/node_modules/react-native-simple-card-view/libs/cardView/index.js\";\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\n\nvar CardView = function (_React$Component) {\n  _inherits(CardView, _React$Component);\n\n  function CardView(props) {\n    _classCallCheck(this, CardView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardView).call(this, props));\n  }\n\n  _createClass(CardView, [{\n    key: \"render\",\n    value: function render() {\n      var container = {\n        shadowOffset: {\n          width: Platform.OS === \"ios\" ? this.props.style.shadowOffsetWidth : 0,\n          height: Platform.OS === \"ios\" ? this.props.style.shadowOffsetWidth : 0\n        },\n        width: this.props.style.width,\n        margin: this.props.style.margin,\n        shadowColor: this.props.style.shadowColor,\n        shadowOpacity: this.props.style.shadowOpacity,\n        shadowRadius: this.props.style.shadowRadius,\n        elevation: Platform.OS === \"android\" ? this.props.elevation : undefined\n      };\n      return React.createElement(View, {\n        style: container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: this.props.style.bgColor,\n          overflow: 'hidden',\n          padding: this.props.style.padding,\n          width: this.props.style.width,\n          borderRadius: this.props.borderRadius\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.props.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, this.props.children)));\n    }\n  }]);\n\n  return CardView;\n}(React.Component);\n\nCardView.defaultProps = {\n  style: {\n    shadowColor: '#000000',\n    shadowOffsetWidth: 3,\n    shadowOffsetHeight: 3,\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    bgColor: '#ffffff',\n    padding: 5,\n    margin: 10,\n    borderRadius: 3,\n    width: 300,\n    elevation: 3\n  }\n};\nCardView.propTypes = {\n  style: PropTypes.object,\n  onPress: PropTypes.func\n};\nexport default CardView;","map":{"version":3,"sources":["/Users/jenny/Frontend_ReadAlright/node_modules/react-native-simple-card-view/libs/cardView/index.js"],"names":["React","PropTypes","CardView","props","container","shadowOffset","width","Platform","OS","style","shadowOffsetWidth","height","margin","shadowColor","shadowOpacity","shadowRadius","elevation","undefined","backgroundColor","bgColor","overflow","padding","borderRadius","onPress","children","Component","defaultProps","shadowOffsetHeight","propTypes","object","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,Q;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iFACXA,KADW;AAElB;;;;6BAIQ;AACP,UAAMC,SAAS,GAAG;AAChBC,QAAAA,YAAY,EAAG;AACbC,UAAAA,KAAK,EAAGC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,iBAAzC,GAA6D,CADxD;AAEbC,UAAAA,MAAM,EAAEJ,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,iBAAzC,GAA6D;AAFxD,SADC;AAKhBJ,QAAAA,KAAK,EAAU,KAAKH,KAAL,CAAWM,KAAX,CAAiBH,KALhB;AAMhBM,QAAAA,MAAM,EAAS,KAAKT,KAAL,CAAWM,KAAX,CAAiBG,MANhB;AAOhBC,QAAAA,WAAW,EAAI,KAAKV,KAAL,CAAWM,KAAX,CAAiBI,WAPhB;AAQhBC,QAAAA,aAAa,EAAE,KAAKX,KAAL,CAAWM,KAAX,CAAiBK,aARhB;AAShBC,QAAAA,YAAY,EAAG,KAAKZ,KAAL,CAAWM,KAAX,CAAiBM,YAThB;AAUhBC,QAAAA,SAAS,EAAMT,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,KAAKL,KAAL,CAAWa,SAAvC,GAAmDC;AAVlD,OAAlB;AAaA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGb,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAG;AACZc,UAAAA,eAAe,EAAE,KAAKf,KAAL,CAAWM,KAAX,CAAiBU,OADtB;AAEZC,UAAAA,QAAQ,EAAS,QAFL;AAGZC,UAAAA,OAAO,EAAU,KAAKlB,KAAL,CAAWM,KAAX,CAAiBY,OAHtB;AAIZf,UAAAA,KAAK,EAAY,KAAKH,KAAL,CAAWM,KAAX,CAAiBH,KAJtB;AAKZgB,UAAAA,YAAY,EAAK,KAAKnB,KAAL,CAAWmB;AALhB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAG,KAAKnB,KAAL,CAAWoB,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKpB,KAAL,CAAWqB,QADf,CAPF,CADF,CADF;AAeD;;;;EApCoBxB,KAAK,CAACyB,S;;AAwC7BvB,QAAQ,CAACwB,YAAT,GAAwB;AACtBjB,EAAAA,KAAK,EAAE;AACLI,IAAAA,WAAW,EAAS,SADf;AAELH,IAAAA,iBAAiB,EAAG,CAFf;AAGLiB,IAAAA,kBAAkB,EAAE,CAHf;AAILb,IAAAA,aAAa,EAAO,GAJf;AAKLC,IAAAA,YAAY,EAAQ,CALf;AAMLI,IAAAA,OAAO,EAAa,SANf;AAOLE,IAAAA,OAAO,EAAa,CAPf;AAQLT,IAAAA,MAAM,EAAc,EARf;AASLU,IAAAA,YAAY,EAAQ,CATf;AAULhB,IAAAA,KAAK,EAAe,GAVf;AAWLU,IAAAA,SAAS,EAAW;AAXf;AADe,CAAxB;AAeAd,QAAQ,CAAC0B,SAAT,GAAqB;AACnBnB,EAAAA,KAAK,EAASR,SAAS,CAAC4B,MADL;AAEnBN,EAAAA,OAAO,EAAOtB,SAAS,CAAC6B;AAFL,CAArB;AAKA,eAAe5B,QAAf","sourcesContent":["import React from 'react';\nimport { Dimensions, Platform, Text, TouchableOpacity, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\nclass CardView extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  // TODO : Add shadow properties to icon - in process â™¨\n\n  render() {\n    const container = {\n      shadowOffset : {\n        width : Platform.OS === \"ios\" ? this.props.style.shadowOffsetWidth : 0,\n        height: Platform.OS === \"ios\" ? this.props.style.shadowOffsetWidth : 0,\n      },\n      width        : this.props.style.width,\n      margin       : this.props.style.margin,\n      shadowColor  : this.props.style.shadowColor,\n      shadowOpacity: this.props.style.shadowOpacity,\n      shadowRadius : this.props.style.shadowRadius,\n      elevation    : Platform.OS === \"android\" ? this.props.elevation : undefined,\n    };\n\n    return (\n      <View style={ container }>\n        <View style={ {\n          backgroundColor: this.props.style.bgColor,\n          overflow       : 'hidden',\n          padding        : this.props.style.padding,\n          width          : this.props.style.width,\n          borderRadius   : this.props.borderRadius,\n        } }>\n          <TouchableOpacity onPress={ this.props.onPress }>\n            { this.props.children }\n          </TouchableOpacity>\n        </View>\n      </View>\n    )\n  }\n}\n\n\nCardView.defaultProps = {\n  style: {\n    shadowColor       : '#000000',\n    shadowOffsetWidth : 3,\n    shadowOffsetHeight: 3,\n    shadowOpacity     : 0.1,\n    shadowRadius      : 3,\n    bgColor           : '#ffffff',\n    padding           : 5,\n    margin            : 10,\n    borderRadius      : 3,\n    width             : 300,\n    elevation         : 3,\n  },\n};\nCardView.propTypes = {\n  style       : PropTypes.object,\n  onPress     : PropTypes.func,\n};\n\nexport default CardView"]},"metadata":{},"sourceType":"module"}