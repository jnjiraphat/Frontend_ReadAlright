{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jenny/Frontend_ReadAlright/App/Screens/InterestScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Button } from \"react-native-elements\";\nimport { Grid, Col, Row } from \"react-native-easy-grid\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport ReadingApi from \"../API/ReadingAPI\";\nimport { List, ListItem } from \"react-native-elements\";\nimport { Actions } from \"react-native-router-flux\";\n\nvar ImageCards = function ImageCards() {\n  return React.createElement(Image, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    }\n  });\n};\n\nvar Interest = function Interest() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var read = function read() {\n    var data;\n    return _regeneratorRuntime.async(function read$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ReadingApi());\n\n          case 2:\n            data = _context.sent;\n            setResult(data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(result);\n  useEffect(function () {\n    read();\n  }, []);\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      view = _useState4[0],\n      setview = _useState4[1];\n\n  if (result) {\n    console.log(\"Eiei\");\n    console.log(result);\n    console.log(\"Mookkkkkkkkk\");\n    console.log(result.length);\n    var items = [{\n      name: \"Music\",\n      img: require(\"./../assets/catagory/music.png\")\n    }, {\n      name: \"Movie\",\n      img: require(\"./../assets/catagory/movie.png\")\n    }, {\n      name: \"News\",\n      img: require(\"./../assets/catagory/news.png\")\n    }, {\n      name: \"Animal\",\n      img: require(\"./../assets/catagory/animal.png\")\n    }, {\n      name: \"Food\",\n      img: require(\"./../assets/catagory/food.png\")\n    }, {\n      name: \"Story\",\n      img: require(\"./../assets/catagory/story.png\")\n    }, {\n      name: \"House\",\n      img: require(\"./../assets/catagory/house.png\")\n    }, {\n      name: \"Natural\",\n      img: require(\"./../assets/catagory/natural.png\")\n    }, {\n      name: \"Sport\",\n      img: require(\"./../assets/catagory/sport.png\")\n    }];\n\n    var goToAbout = function goToAbout() {\n      Actions.about();\n    };\n\n    return React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      }\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      }\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        margin: 50\n      },\n      onPress: goToAbout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      }\n    }, \"Click to go to about\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      }\n    }, React.createElement(Text, {\n      style: styles.topic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      }\n    }, \"Interest\"), React.createElement(Text, {\n      style: styles.descript,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      }\n    }, \"Please select 3 that you interest\")))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      }\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        paddingTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      }\n    }, React.createElement(FlatList, {\n      onPress: function onPress() {\n        return setview(view + 1);\n      },\n      data: result,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(ListItem, {\n          roundAvatar: true,\n          title: item.categoryName,\n          subtitle: item.typeName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          }\n        });\n      },\n      keyExtractor: function keyExtractor(_ref2, index) {\n        var id = _ref2.id;\n        return id;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      }\n    }))), React.createElement(FlatGrid, {\n      itemDimension: 110,\n      items: items,\n      style: styles.gridView,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n            index = _ref3.index;\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return setview(view + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          }\n        }, React.createElement(Card, {\n          containerStyle: styles.itemContainer,\n          image: item.img,\n          imageStyle: {\n            height: \"65%\"\n          },\n          imageProps: {\n            resizeMode: \"cover\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          }\n        }, React.createElement(View, {\n          style: {\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          }\n        }, React.createElement(Text, {\n          style: styles.itemTopic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          }\n        }, item.name))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      }\n    }), React.createElement(Row, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      }\n    }, React.createElement(Button, {\n      title: \"Next\",\n      buttonStyle: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      }\n    }), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      }\n    }, \"Your clicks: \", view))));\n  } else {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      }\n    }, \"Loading\");\n  }\n};\n\nexport default Interest;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  gridView: {\n    marginTop: 20,\n    flex: 1\n  },\n  itemContainer: {\n    borderRadius: 5,\n    height: 110,\n    width: 110,\n    overflow: \"hidden\"\n  },\n  topic: {\n    fontSize: 20,\n    color: \"#000\",\n    marginTop: 50,\n    fontWeight: \"bold\"\n  },\n  descript: {\n    fontSize: 16,\n    color: \"#000\",\n    fontWeight: \"600\"\n  },\n  itemTopic: {\n    fontSize: 14,\n    color: \"#000\",\n    fontWeight: \"bold\"\n  },\n  button: {\n    width: 200,\n    marginTop: 20,\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["/Users/jenny/Frontend_ReadAlright/App/Screens/InterestScreen.js"],"names":["React","useState","useEffect","Card","Button","Grid","Col","Row","FlatGrid","ReadingApi","List","ListItem","Actions","ImageCards","Interest","result","setResult","read","data","console","log","view","setview","length","items","name","img","require","goToAbout","about","margin","styles","container","topic","descript","flex","paddingTop","item","categoryName","typeName","index","id","gridView","itemContainer","height","resizeMode","alignItems","itemTopic","button","StyleSheet","create","justifyContent","marginTop","borderRadius","width","overflow","fontSize","color","fontWeight","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  ImageBackground,\n  FlatList\n} from \"react-native\";\nimport { Card, Button } from \"react-native-elements\";\nimport { Grid, Col, Row } from \"react-native-easy-grid\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport ReadingApi from \"../API/ReadingAPI\";\nimport { List, ListItem } from \"react-native-elements\";\nimport { Actions } from \"react-native-router-flux\";\n\nconst ImageCards = () => {\n  return <Image />;\n};\n\nconst Interest = () => {\n  const [result, setResult] = useState([]);\n  const read = async () => {\n    const data = await ReadingApi();\n    setResult(data);\n    // console.log(data);\n    // console.log(\"-----------------\")\n    // console.log(result)\n  };\n  console.log(result);\n  useEffect(() => {\n    read();\n  }, []);\n\n  const [view, setview] = useState(0);\n\n  if (result) {\n    console.log(\"Eiei\");\n    console.log(result);\n    console.log(\"Mookkkkkkkkk\");\n    console.log(result.length);\n\n    const items = [\n      {\n        name: \"Music\",\n        img: require(\"./../assets/catagory/music.png\")\n      },\n      { name: \"Movie\", img: require(\"./../assets/catagory/movie.png\") },\n      {\n        name: \"News\",\n        img: require(\"./../assets/catagory/news.png\")\n      },\n      { name: \"Animal\", img: require(\"./../assets/catagory/animal.png\") },\n      {\n        name: \"Food\",\n        img: require(\"./../assets/catagory/food.png\")\n      },\n      { name: \"Story\", img: require(\"./../assets/catagory/story.png\") },\n      {\n        name: \"House\",\n        img: require(\"./../assets/catagory/house.png\")\n      },\n      {\n        name: \"Natural\",\n        img: require(\"./../assets/catagory/natural.png\")\n      },\n      { name: \"Sport\", img: require(\"./../assets/catagory/sport.png\") }\n    ];\n    const goToAbout = () => {\n      Actions.about();\n    };\n\n    return (\n      <ScrollView>\n        <Grid>\n          <Row>\n            <TouchableOpacity style={{ margin: 50 }} onPress={goToAbout}>\n              <Text>Click to go to about</Text>\n            </TouchableOpacity>\n          </Row>\n          <Row>\n            <View style={styles.container}>\n              <View style={styles.container}>\n                <Text style={styles.topic}>Interest</Text>\n                <Text style={styles.descript}>\n                  Please select 3 that you interest\n                </Text>\n              </View>\n            </View>\n          </Row>\n          <Row>\n            <View style={styles.container}></View>\n          </Row>\n          <Row>\n            <View style={{ flex: 1, paddingTop: 20 }}>\n              <FlatList\n                onPress={() => setview(view + 1)}\n                data={result}\n                renderItem={({ item }) => (\n                  <ListItem\n                    roundAvatar\n                    title={item.categoryName}\n                    subtitle={item.typeName}\n                  />\n                )}\n                keyExtractor={({ id }, index) => id}\n              />\n            </View>\n          </Row>\n\n          <FlatGrid\n            itemDimension={110}\n            items={items}\n            style={styles.gridView}\n            renderItem={({ item, index }) => (\n              <TouchableOpacity onPress={() => setview(view + 1)}>\n                <Card\n                  containerStyle={styles.itemContainer}\n                  image={item.img}\n                  imageStyle={{\n                    height: \"65%\"\n                    // borderColor: \"red\",\n                    // borderTopLeftRadius: 5,\n                    // borderTopRightRadius: 5,\n                  }}\n                  imageProps={{ resizeMode: \"cover\" }}\n                >\n                  {/* <Image\n              source={item.img}\n              style={{ height: \"100%\" }}\n              resizeMode=\"cover\"\n            /> */}\n                  <View style={{ alignItems: \"center\" }}>\n                    <Text style={styles.itemTopic}>{item.name}</Text>\n                  </View>\n                </Card>\n              </TouchableOpacity>\n            )}\n          />\n          <Row style={styles.container}>\n            <Button title=\"Next\" buttonStyle={styles.button} />\n            <Text>Your clicks: {view}</Text>\n          </Row>\n        </Grid>\n        {/* <View style={styles.container}>\n          <TouchableOpacity onPress={() => setcount(count + 1)}>\n            <Image source={require(\"./../assets/icon.png\")} />\n          </TouchableOpacity>\n          <Text>your clicks: {count}</Text>\n          <Text>click</Text>\n        </View> */}\n        {/* <FlatGrid\n          itemDimension={110}\n          items={items}\n          style={styles.gridView}\n          renderItem={({ item, index }) => (\n            <CardViewWithImage\n              width={110}\n              borderRadius={5}\n              source={item.img}\n              title={item.name}\n              imageWidth={\"100%\"}\n              imageHeight={100}\n              roundedImage={false}\n            />\n          )}\n        /> */}\n      </ScrollView>\n    );\n  } else {\n    return <Text>Loading</Text>;\n  }\n};\n\nexport default Interest;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  gridView: {\n    marginTop: 20,\n    flex: 1\n  },\n  itemContainer: {\n    borderRadius: 5,\n    height: 110,\n    width: 110,\n    overflow: \"hidden\"\n  },\n  topic: {\n    fontSize: 20,\n    color: \"#000\",\n    marginTop: 50,\n    fontWeight: \"bold\"\n  },\n  descript: {\n    fontSize: 16,\n    color: \"#000\",\n    fontWeight: \"600\"\n  },\n  itemTopic: {\n    fontSize: 14,\n    color: \"#000\",\n    fontWeight: \"bold\"\n  },\n  button: {\n    width: 200,\n    marginTop: 20,\n    marginBottom: 20\n  }\n});\n"]},"metadata":{},"sourceType":"module"}